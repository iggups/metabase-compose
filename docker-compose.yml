version: '3.8'

services:
  db:
    build:
      context: .
      dockerfile: 'Dockerfile-${DB_TYPE}'
      args:
        db_name: ${DB_NAME}
        db_user: ${DB_USER}
        db_password: ${DB_PASSWORD}
        db_port: ${DB_PORT}
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - type: volume
        source: ${DB_OUTSIDE_VOLUME}
        target: ${DB_INSIDE_VOLUME}

  adminer:
    image: adminer
    restart: always
    ports:
      - '${ADMINER_PORT}:8080'
    depends_on:
      - 'db'
    networks:
      service_network:

  metabase:
    container_name: metabase
    hostname: metabase
    image: metabase/metabase
    restart: always
    environment:
      MB_DB_FILE: '${MB_DB_FILE}'
      MB_DB_TYPE: '${DB_TYPE}'
      MB_DB_DBNAME: '${DB_NAME}'
      MB_DB_PORT: '${DB_PORT}'
      MB_DB_USER: '${DB_USER}'
      MB_DB_HOST: 'db'
      MB_DB_PASS: '${DB_PASSWORD}'
      JAVA_TIMEZONE: '${MB_JAVA_TIMEZONE}'
      VIRTUAL_HOST: '${MB_HOSTNAME}'
      LETSENCRYPT_HOST: '${MB_HOSTNAME}'
      LETSENCRYPT_EMAIL: '${LETSENCRYPT_EMAIL}'
      VIRTUAL_PORT: '3000'
    ports:
      # <Port exposed>:<Port running inside container>
      - '${MB_PORT}:3000'
    volumes:
      # Volumes where Metabase data will be persisted
      - 'mb-data:/metabase-data'
    depends_on:
      - 'db'
    networks:
      service_network:

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    container_name: nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
    networks:
      service_network:

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      NGINX_PROXY_CONTAINER: "nginx-proxy"
    networks:
      service_network:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html

networks:
  service_network:

volumes:
  db-data:
  mb-data:
  nginx-certs:
  nginx-vhost:
  nginx-html: